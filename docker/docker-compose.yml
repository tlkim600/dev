version: '3.1'

services:
#  redis:
#    container_name: redis
#    hostname: redis
#    image: redis
#    ports:
#      - 6379:6379
#  redis-commander:
#    container_name: redis-commander
#    hostname: redis-commander
#    image: rediscommander/redis-commander:latest
#    restart: always
#    environment:
#      - REDIS_HOSTS=local:redis:6379
#    ports:
#      - 8081:8081

#
#  mongo:
#    image: mongo
#    restart: always
#    ports:
#      - 9017:27017
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: qwe123!@#
#
#  mongo-express:
#    image: mongo-express
#    restart: always
#    ports:
#      - 9018:8081
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: root
#      ME_CONFIG_MONGODB_ADMINPASSWORD: qwe123!@#
#      
  db:
    image: mysql
    restart: always
    environment:
      # Password for root access
      MYSQL_ROOT_PASSWORD: qwe123!@#
      MYSQL_DATABASE: dev_mysql
      # So you don't have to use root, but you can if you like
      MYSQL_USER: dev_user
      # You can use whatever password you like
      MYSQL_PASSWORD: qwe123!@#
    command: --default-authentication-plugin=mysql_native_password
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
#      - my-db-mysql8:/var/lib/mysql
      - ./init-db/:/docker-entrypoint-initdb.d/
    # Names our volume
volumes:
  my-db-mysql8:
